var fs = require('fs')
var xml2js = require('xml2js')
var path = require('path')

var Config = {
	app : null,
	port : null,
	prefix : null,
	persistence : null, 
	userEntity : null, 
	init : function(callback) {
		this.app = require('express')()
		this.persistence = require('../persistence/persistence')

		var that = this

		fs.readFile(path.dirname(require.main.filename) + '/config/config.xml', function(err, data) {
			var parser = new xml2js.Parser()
			parser.parseString(data, function (err, fileObj) {
				if (err) {
					console.log('Arquivo de configuração inválido.')
					return false
				}

				fileObj.xml.config.forEach(function(node) {
					that.persistence.setDatabase(node.database[0].name[0])
					that.port = node.server[0].port[0]
					that.prefix = node.server[0].prefix[0] == '' ? '/' : '/' + node.server[0].prefix[0] + '/'
					callback()
				})
		    	})
		})
	},
	setUserEntity : function(userEntity) {
		this.userEntity = userEntity
	},
	getPersistence : function() {
		return this.persistence
	},
	getPort : function() {
		return this.port
	},
	getApp : function() {
		return this.app
	},
	getPrefix : function() {
		return this.prefix
	},
	getUserEntity : function() {
		return this.userEntity
	}
}

module.exports = {
	getConfiguration : function() {
		return Config
	},
	setUserEntity : function(userEntity) {
		Config.setUserEntity(userEntity)
	},
	init : function(callback) {
		Config.init(callback)
	}
}
