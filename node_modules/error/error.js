var utilities = require('../core/utilities')
var numberMessage = require('../core/keyvalue')
var fs = require('fs')
var xml2js = require('xml2js')
var path = require('path')

var Errors = {
	errors : [
			numberMessage.getNew(1, 'Não logado.'),
			numberMessage.getNew(2, 'Regra de negócio inválida'),
			numberMessage.getNew(3, 'Falha de insert no banco de dados.'),
			numberMessage.getNew(4, 'Falha ao acessar um webservice.'),
			numberMessage.getNew(5, 'Não retornou usuários.'),
			numberMessage.getNew(6, 'Falha de busca no banco de dados.'),
			numberMessage.getNew(7, 'Falha de update no banco de dados.'),
			numberMessage.getNew(8, 'Falha ao recuperar dados do list one no update.'),
			numberMessage.getNew(9, 'Falha de listagem no banco de dados.'),
			numberMessage.getNew(10, 'Falha de delete no banco de dados.'),
			numberMessage.getNew(11, 'Privilégio inválido.'),
			numberMessage.getNew(12, 'Falha no acesso ao próprio webservice.')
		 ],
	addToErrorList : function(code, message) {
		this.errors.push(numberMessage.getNew(code, message))
	},
	init : function () {
		var that = this

		fs.readFile(path.dirname(require.main.filename) + '/config/errors.xml', function(err, data) {
			var parser = new xml2js.Parser()
			parser.parseString(data, function (err, fileObj) {
				if (err)
					return false

				fileObj.xml.errors[0].error.forEach(function(node) {
					that.addToErrorList(node.code[0], node.message[0])
				})
		    	})
		})
	},
	getList : function() {
		return this.errors
	},
	getMsgByErrorCode : function(errorCode) {
		return utilities.getValueByIndex(this.getList(), errorCode, 'key', 'value')
	}
}

module.exports = {
	init : function() {
		Errors.init()
	},
	dispatch : function(code, detail, appLevel) {
		var errorReturn = { error : code, message : Errors.getMsgByErrorCode(code), details : detail }
		errorReturn.core = (appLevel == undefined) ? 1 : 0
		return errorReturn
	}
}
