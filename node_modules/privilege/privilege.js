var selfws = require('../webservice/selfwebservice')
var following = require('../core/following')
var utilities = require('../core/utilities')
var privBypass = require('./privbypass')
var config = require('../core/config')

module.exports = {
	isValid : function(usuario, model, crud, callback) {
		following.makeObjFollower(usuario, config.getConfiguration().getUserEntity())

		privBypass.addNew(config.getConfiguration().getUserEntity(), 'list', config.getConfiguration().getUserEntity())

		return selfws.get(config.getConfiguration().getUserEntity(), 'list', usuario, function(res) {
			if (res.error != undefined)
				return callback(res)
			else {
				res = JSON.parse(res)
				if (res.length > 0) {
					return callback(res[0])
				} else
					return callback(require('../error/error').dispatch(5, undefined)) 
			}
		})
	},
	isSuficient : function(obj, model, crud, usuario, callback) {

		if (usuario == null) 
			return callback(obj)

		if (utilities.isArrayInsideArray(privBypass.getAll(), [model, crud, following.getCurrent(obj)])) 
			return callback(obj)

		var modelModule = require.main.require('./model/' + model)

		var allowed = usuario.admin
		if (!allowed) {
			if (modelModule.getPriv != undefined) {
				if (eval('modelModule.getPriv().' + crud) != undefined) {
					allowed = eval('modelModule.getPriv().' + crud + '(obj, usuario)')
				} else if ((modelModule.getPriv().standard != undefined) && (crud != 'list')) {
					allowed = modelModule.getPriv().standard(obj, usuario)
				}
			}
		}

		return (allowed) ? callback(obj) : callback(require('../error/error').dispatch(11, undefined))
	}
}
