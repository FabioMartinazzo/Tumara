var utilities = require('../core/utilities')
var config = require('../core/config')
var fs = require('fs')
var xml2js = require('xml2js')
var path = require('path')

var Currents = []

var PrivByPass = {
	init : function() {
		fs.readFile(path.dirname(require.main.filename) + '/config/bypass.xml', function(err, data) {
			var parser = new xml2js.Parser()
			parser.parseString(data, function (err, fileObj) {
				if (err) 
					return false

				fileObj.xml.bypassers.forEach(function(node) {
					node.bypass.forEach(function(bypass) {
						follower = undefined
						if (bypass.follower != undefined)
							follower = bypass.follower [0]
						Currents.push([bypass.entity[0], bypass.crud[0], follower])
					})
				})
		    	})
		})
	},
	checkExists : function(model, crud, follower) {
		return utilities.isArrayInsideArray(Currents, [model, crud, follower])
	}
}

module.exports = {
	addNew : function(model, crud, follower) {
		if (!PrivByPass.checkExists(model, crud, follower))
			Currents.push([model, crud, follower])
	},
	getAll : function() {
		return Currents
	},
	init : function() {
		PrivByPass.init()
	}
}
